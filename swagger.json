{
  "openapi": "3.0.0",
  "info": {
    "title": "High School Management System API",
    "version": "1.0.0",
    "description": "API documentation for the High School Management System"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Student": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the student"
          },
          "userId": {
            "type": "integer",
            "description": "Associated user ID"
          },
          "gradeLevelId": {
            "type": "integer",
            "description": "Grade level ID"
          },
          "classId": {
            "type": "integer",
            "description": "Class ID (optional)"
          },
          "User": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "role": {
                "type": "string",
                "enum": [
                  "STUDENT"
                ]
              },
              "phoneNumber": {
                "type": "string"
              }
            }
          },
          "GradeLevel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "Class": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "schedule": {
                "type": "string"
              },
              "roomNumber": {
                "type": "string"
              }
            }
          },
          "Parents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "User": {
                  "type": "object",
                  "properties": {
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "phoneNumber": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CreateStudentRequest": {
        "type": "object",
        "required": [
          "firstName",
          "lastName",
          "email",
          "password",
          "gradeLevelId"
        ],
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Student's first name"
          },
          "lastName": {
            "type": "string",
            "description": "Student's last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Student's email address"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "description": "Student's password"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Student's phone number"
          },
          "gradeLevelId": {
            "type": "integer",
            "description": "Grade level ID"
          },
          "classId": {
            "type": "integer",
            "description": "Class ID (optional)"
          },
          "parentIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Array of parent IDs to associate with the student"
          }
        }
      },
      "UpdateStudentRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Student's first name"
          },
          "lastName": {
            "type": "string",
            "description": "Student's last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Student's email address"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Student's phone number"
          },
          "gradeLevelId": {
            "type": "integer",
            "description": "Grade level ID"
          },
          "classId": {
            "type": "integer",
            "description": "Class ID"
          },
          "parentIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Array of parent IDs to associate with the student"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Teacher": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the teacher"
          },
          "userId": {
            "type": "integer",
            "description": "Associated user ID"
          },
          "User": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "role": {
                "type": "string",
                "enum": [
                  "TEACHER"
                ]
              },
              "phoneNumber": {
                "type": "string"
              }
            }
          },
          "Classes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "schedule": {
                  "type": "string"
                },
                "roomNumber": {
                  "type": "string"
                },
                "Subject": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CreateTeacherRequest": {
        "type": "object",
        "required": [
          "firstName",
          "lastName",
          "email",
          "password"
        ],
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Teacher's first name"
          },
          "lastName": {
            "type": "string",
            "description": "Teacher's last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Teacher's email address"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "description": "Teacher's password"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Teacher's phone number"
          }
        }
      },
      "UpdateTeacherRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Teacher's first name"
          },
          "lastName": {
            "type": "string",
            "description": "Teacher's last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Teacher's email address"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Teacher's phone number"
          }
        }
      },
      "AssignClassesRequest": {
        "type": "object",
        "required": [
          "classIds"
        ],
        "properties": {
          "classIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Array of class IDs to assign to the teacher"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the user"
          },
          "firstName": {
            "type": "string",
            "description": "User's first name"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "TEACHER",
              "STUDENT",
              "PARENT",
              "STAFF"
            ],
            "description": "User's role in the system"
          },
          "phoneNumber": {
            "type": "string",
            "description": "User's phone number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "User creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "User last update timestamp"
          }
        }
      },
      "CreateUserRequest": {
        "type": "object",
        "required": [
          "firstName",
          "lastName",
          "email",
          "password",
          "role"
        ],
        "properties": {
          "firstName": {
            "type": "string",
            "description": "User's first name"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "description": "User's password"
          },
          "phoneNumber": {
            "type": "string",
            "description": "User's phone number"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "TEACHER",
              "STUDENT",
              "PARENT",
              "STAFF"
            ],
            "description": "User's role in the system"
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "User's first name"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "phoneNumber": {
            "type": "string",
            "description": "User's phone number"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "TEACHER",
              "STUDENT",
              "PARENT",
              "STAFF"
            ],
            "description": "User's role in the system"
          }
        }
      }
    }
  },
  "paths": {
    "/students": {
      "get": {
        "summary": "List all students",
        "description": "Retrieve a paginated list of students with optional filtering and search capabilities",
        "tags": [
          "Students"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "Number of students per page"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Search term for student name or email"
          },
          {
            "in": "query",
            "name": "gradeLevel",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by grade level ID"
          },
          {
            "in": "query",
            "name": "classId",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by class ID"
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "enum": [
                "createdAt",
                "firstName",
                "lastName",
                "email"
              ],
              "default": "createdAt"
            },
            "description": "Field to sort by"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "default": "DESC"
            },
            "description": "Sort order"
          }
        ],
        "responses": {
          "200": {
            "description": "Students retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Students retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "students": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Student"
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "currentPage": {
                              "type": "integer"
                            },
                            "totalPages": {
                              "type": "integer"
                            },
                            "totalCount": {
                              "type": "integer"
                            },
                            "hasNext": {
                              "type": "boolean"
                            },
                            "hasPrevious": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new student",
        "description": "Create a new student account with user credentials and associate with grade level and optional class",
        "tags": [
          "Students"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStudentRequest"
              },
              "example": {
                "firstName": "John",
                "lastName": "Doe",
                "email": "john.doe@student.school.com",
                "password": "securePassword123",
                "phoneNumber": 1234567890,
                "gradeLevelId": 1,
                "classId": 5,
                "parentIds": [
                  1,
                  2
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Student created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Student created successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Student"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/students/{id}": {
      "get": {
        "summary": "Get student by ID",
        "description": "Retrieve a specific student by their ID with all related information",
        "tags": [
          "Students"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Student ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Student retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Student retrieved successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Student"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Student not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update student information",
        "description": "Update an existing student's information including user details and associations",
        "tags": [
          "Students"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Student ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStudentRequest"
              },
              "example": {
                "firstName": "John",
                "lastName": "Smith",
                "email": "john.smith@student.school.com",
                "phoneNumber": 1234567890,
                "gradeLevelId": 2,
                "classId": 8,
                "parentIds": [
                  1,
                  3
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Student updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Student updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Student"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Student not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a student",
        "description": "Delete a student and their associated user account permanently",
        "tags": [
          "Students"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Student ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Student deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Student deleted successfully"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Student not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/teachers": {
      "get": {
        "summary": "List all teachers",
        "description": "Retrieve a paginated list of teachers with optional filtering and search capabilities",
        "tags": [
          "Teachers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "Number of teachers per page"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Search term for teacher name or email"
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "enum": [
                "createdAt",
                "firstName",
                "lastName",
                "email"
              ],
              "default": "createdAt"
            },
            "description": "Field to sort by"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "default": "DESC"
            },
            "description": "Sort order"
          }
        ],
        "responses": {
          "200": {
            "description": "Teachers retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Teachers retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "teachers": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Teacher"
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "currentPage": {
                              "type": "integer"
                            },
                            "totalPages": {
                              "type": "integer"
                            },
                            "totalCount": {
                              "type": "integer"
                            },
                            "hasNext": {
                              "type": "boolean"
                            },
                            "hasPrevious": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "403": {
            "description": "Forbidden - Admin access required"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new teacher",
        "description": "Create a new teacher account with user credentials",
        "tags": [
          "Teachers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeacherRequest"
              },
              "example": {
                "firstName": "Jane",
                "lastName": "Smith",
                "email": "jane.smith@school.com",
                "password": "securePassword123",
                "phoneNumber": 1234567890
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Teacher created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Teacher created successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Teacher"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Validation errors"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "403": {
            "description": "Forbidden - Admin access required"
          },
          "409": {
            "description": "Conflict - Email already exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/teachers/{id}": {
      "get": {
        "summary": "Get teacher by ID",
        "description": "Retrieve a specific teacher by their ID with all related information including assigned classes",
        "tags": [
          "Teachers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Teacher ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Teacher retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Teacher retrieved successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Teacher"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Teacher not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update teacher information",
        "description": "Update an existing teacher's information including user details",
        "tags": [
          "Teachers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Teacher ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTeacherRequest"
              },
              "example": {
                "firstName": "Jane",
                "lastName": "Johnson",
                "email": "jane.johnson@school.com",
                "phoneNumber": 1234567890
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Teacher updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Teacher updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Teacher"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Validation errors"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "403": {
            "description": "Forbidden - Admin access required"
          },
          "404": {
            "description": "Teacher not found"
          },
          "409": {
            "description": "Conflict - Email already exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a teacher",
        "description": "Delete a teacher and their associated user account permanently",
        "tags": [
          "Teachers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Teacher ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Teacher deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Teacher deleted successfully"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "403": {
            "description": "Forbidden - Admin access required"
          },
          "404": {
            "description": "Teacher not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/teachers/{id}/assign": {
      "post": {
        "summary": "Assign classes to teacher",
        "description": "Assign multiple classes to a specific teacher",
        "tags": [
          "Teachers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Teacher ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignClassesRequest"
              },
              "example": {
                "classIds": [
                  1,
                  2,
                  3
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Classes assigned to teacher successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Classes assigned to teacher successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "teacherId": {
                          "type": "integer"
                        },
                        "classIds": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid classIds format"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "403": {
            "description": "Forbidden - Admin access required"
          },
          "404": {
            "description": "Teacher not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/teachers/{id}/classes": {
      "get": {
        "summary": "Get teacher's assigned classes",
        "description": "Retrieve all classes assigned to a specific teacher",
        "tags": [
          "Teachers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Teacher ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Teacher classes retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Teacher classes retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "schedule": {
                            "type": "string"
                          },
                          "roomNumber": {
                            "type": "string"
                          },
                          "Subject": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Teacher not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/public": {
      "get": {
        "summary": "Get public user information",
        "description": "Retrieve public information about the user system (no authentication required)",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Public information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Public user info"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "summary": "Get current user profile",
        "description": "Retrieve the profile information of the currently authenticated user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current user profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Current user retrieved successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List all users",
        "description": "Retrieve a paginated list of users with optional filtering and search capabilities",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "Number of users per page"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Search term for user name or email"
          },
          {
            "in": "query",
            "name": "role",
            "schema": {
              "type": "string",
              "enum": [
                "ADMIN",
                "TEACHER",
                "STUDENT",
                "PARENT",
                "STAFF"
              ]
            },
            "description": "Filter by user role"
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "enum": [
                "createdAt",
                "firstName",
                "lastName",
                "email"
              ],
              "default": "createdAt"
            },
            "description": "Field to sort by"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "default": "DESC"
            },
            "description": "Sort order"
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Users retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        },
                        "pages": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "403": {
            "description": "Forbidden - Admin access required"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "description": "Create a new user account with specified role",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              },
              "example": {
                "firstName": "John",
                "lastName": "Doe",
                "email": "john.doe@school.com",
                "password": "securePassword123",
                "phoneNumber": 1234567890,
                "role": "STAFF"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User created successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Validation errors"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "403": {
            "description": "Forbidden - Admin access required"
          },
          "409": {
            "description": "Conflict - Email already exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "description": "Retrieve a specific user by their ID",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User retrieved successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update user information",
        "description": "Update an existing user's information",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              },
              "example": {
                "firstName": "John",
                "lastName": "Smith",
                "email": "john.smith@school.com",
                "phoneNumber": 1234567890,
                "role": "STAFF"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Validation errors"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "403": {
            "description": "Forbidden - Admin access required"
          },
          "404": {
            "description": "User not found"
          },
          "409": {
            "description": "Conflict - Email already exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "description": "Delete a user account permanently",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User deleted successfully"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "403": {
            "description": "Forbidden - Admin access required"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "tags": []
}